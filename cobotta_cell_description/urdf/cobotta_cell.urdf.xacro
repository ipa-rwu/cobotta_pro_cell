<?xml version="1.0" encoding="utf-8"?>
<robot name="cobotta_cell" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Include description for 6-dof manipulator -->
  <!-- <xacro:include filename="$(find cvrb0609_description)/urdf/cvrb0609.urdf.xacro" /> -->
  <!-- Include description for cell -->
  <xacro:include filename="$(find kiwi_cell_description)/urdf/kiwi_cell.urdf.xacro" />
  <!-- Include description for system -->
  <xacro:include filename="$(find pneumatic_disassembly_unit_description)/urdf/pneumatic_disassembly_unit.urdf.xacro" />
  <!-- Include description for gripper -->
  <xacro:include filename="$(find schunk_egp64_c_description)/urdf/schunk_egp64_c.urdf.xacro" />

  <!-- (Don't use this with real robot, miss ros2_control) Instantiate cobotta pro -->
  <!-- <xacro:cvrb0609 prefix="c_210_cobotta_pro_" /> -->

  <!-- Load cobotta pro from denso_robot_descriptions which has ros2_control -->
  <!-- parameters -->
   <xacro:arg name="cobotta_namespace" default="" />
   <xacro:arg name="namespace" default="c_210_cobotta_pro_" />

   <xacro:arg name="model" default="cvrb0609" />
   <xacro:arg name="transmission_hw_interface" default=""/>
   <!-- ros2_control related parameters -->
   <xacro:arg name="verbose" default="false" />
   <xacro:arg name="sim" default="false" />
   <xacro:arg name="use_mock_hardware" default="false" />
   <xacro:arg name="ip_address" default="192.168.0.2" />
   <xacro:arg name="send_format" default="32" />
   <xacro:arg name="recv_format" default="34" />
      <!-- import main macro -->
   <xacro:include filename="$(find denso_robot_descriptions)/robots/$(arg model)/urdf/denso_robot_macro.xacro"/>

   <xacro:arg name="initial_positions_file" default="$(find cobotta_cell_description)/config/initial_positions.yaml" />

    <!-- Set arg initial_positions_file as property -->
   <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)" />

   <!-- arm -->
   <xacro:denso_robot
     model="$(arg model)"
     namespace="$(arg namespace)"
     transmission_hw_interface="$(arg transmission_hw_interface)"
     sim="$(arg sim)"
     use_mock_hardware="$(arg use_mock_hardware)"
     ip_address="$(arg ip_address)"
     verbose="$(arg verbose)"
     send_format="$(arg send_format)"
     recv_format="$(arg recv_format)" />

  <!-- Instantiate kiwi cell -->
  <xacro:kiwi_cell prefix="c_211_kiwi_cell_" />
  <!-- Instantiate Pneumatic disassembly unit with 2 cylinders -->
  <xacro:pneumatic_disassembly_unit prefix="c_212_pneumatic_disassembly_unit_with_2_cylinders_" />
  <!-- Instantiate schunk egp64 gripper -->
  <xacro:schunk_egp64_c prefix="c_213_schunk_egp64_gripper_" />

  <link name="world" />

  <joint name="c_211_kiwi_cell_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="world"/>
    <child link="c_211_kiwi_cell_base_link"/>
  </joint>
  <joint name="c_210_cobotta_pro_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
    <parent link="c_211_kiwi_cell_robot_base_plate_link"/>
    <child link="$(arg namespace)base_link"/>
  </joint>
  <joint name="c_212_pneumatic_disassembly_unit_with_2_cylinders_joint" type="fixed">
    <origin xyz="-0.46 0 0" rpy="0 0 ${3*pi/2}"/>
    <parent link="c_211_kiwi_cell_robot_base_plate_link"/>
    <child link="c_212_pneumatic_disassembly_unit_with_2_cylinders_base_link"/>
  </joint>
  <joint name="c_213_schunk_egp64_gripper_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="$(arg namespace)J6"/>
    <child link="c_213_schunk_egp64_gripper_base_link"/>
  </joint>

</robot>
